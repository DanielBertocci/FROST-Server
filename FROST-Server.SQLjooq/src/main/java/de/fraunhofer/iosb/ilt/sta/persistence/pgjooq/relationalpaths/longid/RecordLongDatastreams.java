/*
 * This file is generated by jOOQ.
 */
package de.fraunhofer.iosb.ilt.sta.persistence.pgjooq.relationalpaths.longid;

import de.fraunhofer.iosb.ilt.sta.persistence.pgjooq.relationalpaths.AbstractRecordDatastreams;
import java.time.OffsetDateTime;
import javax.annotation.Generated;
import org.jooq.Field;

/**
 * This class is generated by jOOQ.
 */
@Generated(
        value = {
            "http://www.jooq.org",
            "jOOQ version:3.11.7"
        },
        comments = "This class is generated by jOOQ"
)
@SuppressWarnings({"all", "unchecked", "rawtypes"})
public class RecordLongDatastreams extends AbstractRecordDatastreams<Long> {

    private static final long serialVersionUID = 230011824;

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field1() {
        return TableLongDatastreams.DATASTREAMS.ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field2() {
        return TableLongDatastreams.DATASTREAMS.description;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field3() {
        return TableLongDatastreams.DATASTREAMS.observationType;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<OffsetDateTime> field4() {
        return TableLongDatastreams.DATASTREAMS.phenomenonTimeStart;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<OffsetDateTime> field5() {
        return TableLongDatastreams.DATASTREAMS.phenomenonTimeEnd;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<OffsetDateTime> field6() {
        return TableLongDatastreams.DATASTREAMS.resultTimeStart;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<OffsetDateTime> field7() {
        return TableLongDatastreams.DATASTREAMS.resultTimeEnd;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field8() {
        return TableLongDatastreams.DATASTREAMS.SENSOR_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field9() {
        return TableLongDatastreams.DATASTREAMS.OBS_PROPERTY_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field10() {
        return TableLongDatastreams.DATASTREAMS.THING_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field11() {
        return TableLongDatastreams.DATASTREAMS.unitName;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field12() {
        return TableLongDatastreams.DATASTREAMS.unitSymbol;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field13() {
        return TableLongDatastreams.DATASTREAMS.unitDefinition;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field14() {
        return TableLongDatastreams.DATASTREAMS.name;
    }

    /**
     * @deprecated Unknown data type. Please define an explicit
     * {@link org.jooq.Binding} to specify how this type should be handled.
     * Deprecation can be turned off using
     * {@literal <deprecationOnUnknownTypes/>} in your code generator
     * configuration.
     */
    @java.lang.Deprecated
    @Override
    public Field<Object> field15() {
        return TableLongDatastreams.DATASTREAMS.observedArea;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field16() {
        return TableLongDatastreams.DATASTREAMS.properties;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------
    /**
     * Create a detached DatastreamsRecord
     */
    public RecordLongDatastreams() {
        super(TableLongDatastreams.DATASTREAMS);
    }

    /**
     * Create a detached, initialised DatastreamsRecord
     */
    public RecordLongDatastreams(Long id, String description, String observationType, OffsetDateTime phenomenonTimeStart, OffsetDateTime phenomenonTimeEnd, OffsetDateTime resultTimeStart, OffsetDateTime resultTimeEnd, Long sensorId, Long obsPropertyId, Long thingId, String unitName, String unitSymbol, String unitDefinition, String name, Object observedArea, String properties) {
        super(TableLongDatastreams.DATASTREAMS);

        set(0, id);
        set(1, description);
        set(2, observationType);
        set(3, phenomenonTimeStart);
        set(4, phenomenonTimeEnd);
        set(5, resultTimeStart);
        set(6, resultTimeEnd);
        set(7, sensorId);
        set(8, obsPropertyId);
        set(9, thingId);
        set(10, unitName);
        set(11, unitSymbol);
        set(12, unitDefinition);
        set(13, name);
        set(14, observedArea);
        set(15, properties);
    }
}
